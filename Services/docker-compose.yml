version: "3.4"

services:
  review:
    container_name: review
    build: ./Review/
    ports:
      - "5001:5000"
    command: bash -c "python manage.py wait_for && python manage.py migrate && python manage.py runserver 0.0.0.0:5000"
    volumes:
      - ./Review/src:/app/src
    environment:
      - DB_HOST=review_db
      - DB_NAME=review
      - DB_USER=postgres
      - DB_PASS=superpassword
    depends_on:
      - "review_db"
      - "rabbitmq"
    restart: on-failure

  user:
    container_name: userApp
    build: ./User/
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5003:80"
    volumes:
      - ./User:/app/new
    depends_on:
      - user_db
    restart: always

  recipe:
    container_name: recipe
    build: ./Recipe/
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "MongoDbSettings:ConnectionString=mongodb://recipedb:27017"
      - "MessageBrokerOptions:HostName=rabbitmq"
      - "ElasticSearchConfig:ConnectionString=http://elasticsearch:9200"
    ports:
      - "5004:80"
    volumes:
      - ./Recipe:/app/new
    depends_on:
      - recipedb
      - rabbitmq
      - elasticsearch
    restart: on-failure

  gateway:
    container_name: api_gateway
    build: ./Gateway/
    ports:
      - "5009:5009"
    volumes:
      - ./Gateway:/app/src
    command: "npm run dev"
    depends_on:
      - "review"
      - "rating"
    environment:
      - PORT:5009
      - Review_service_uri=http://review:5000
      - Rating_service_uri=http://rating:5000
      - Recipe_service_uri=http://recipe:80
      - User_service_uri=http://userApp:80

  rating:
    container_name: rating
    build: ./Rating/
    restart: always
    ports:
      - "5002:5000"
    command: "python main.py"
    volumes:
      - ./Rating/src:/app/src
    environment:
      - PORT:5000
      - PYTHONUNBUFFERED=1
    depends_on:
      - "rabbitmq"

  user_db:
    container_name: user_db
    image: mcr.microsoft.com/mssql/server:2017-latest
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=MyPassword0
      - DATABASE=UserDb
  recipedb:
    container_name: recipedb
    image: mongo
    ports:
      - "27017:27017"
    restart: always

  review_db:
    image: postgres:10-alpine
    container_name: review_db
    environment:
      - POSTGRES_DB=review
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=superpassword
    ports:
      - "5005:5432"
  rabbitmq:
    image: "rabbitmq:3-management-alpine"
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
    container_name: elasticsearch
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    ports:
      - 9200:9200
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
  kibana:
    image: docker.elastic.co/kibana/kibana:7.4.0
    container_name: kibana
    restart: always
    environment:
      - ELASTIC_SEARCH_HOSTS:http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
volumes:
  elasticsearch-data:
